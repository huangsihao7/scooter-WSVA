# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]


  - job_name: 'wsva'
    static_configs:
      # 目标的采集地址
      - targets: ['scooter-favorite-api:9770']
        labels:
          # 自定义标签
          app: 'favorite-api'
          env: 'test'

      - targets: ['scooter-user-api:9770']
        labels:
          app: 'user-api'
          env: 'test'
      - targets: ['scooter-relation-api:9770']
        labels:
          app: 'relation-api'
          env: 'test'
      - targets: ['scooter-live-api:9770']
        labels:
          app: 'live-api'
          env: 'test'
      - targets: ['scooter-comment-api:9770']
        labels:
          app: 'comment-api'
          env: 'test'
      - targets: ['scooter-feed-api:9770']
        labels:
          app: 'feed-api'
          env: 'test'
      - targets: ['scooter-mq-api:9770']
        labels:
          app: 'mq-api'
          env: 'test'