// Code generated by goctl. DO NOT EDIT.
// Source: live.proto

package liveclient

import (
	"context"

	"github.com/huangsihao7/scooter-WSVA/live/rpc/live"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ListLiveRequest   = live.ListLiveRequest
	ListLiveResponse  = live.ListLiveResponse
	StartLiveRequest  = live.StartLiveRequest
	StartLiveResponse = live.StartLiveResponse
	User              = live.User

	Live interface {
		// 开启直播
		StartLive(ctx context.Context, in *StartLiveRequest, opts ...grpc.CallOption) (*StartLiveResponse, error)
		// 查看直播列表
		ListVideo(ctx context.Context, in *ListLiveRequest, opts ...grpc.CallOption) (*ListLiveResponse, error)
	}

	defaultLive struct {
		cli zrpc.Client
	}
)

func NewLive(cli zrpc.Client) Live {
	return &defaultLive{
		cli: cli,
	}
}

// 开启直播
func (m *defaultLive) StartLive(ctx context.Context, in *StartLiveRequest, opts ...grpc.CallOption) (*StartLiveResponse, error) {
	client := live.NewLiveClient(m.cli.Conn())
	return client.StartLive(ctx, in, opts...)
}

// 查看直播列表
func (m *defaultLive) ListVideo(ctx context.Context, in *ListLiveRequest, opts ...grpc.CallOption) (*ListLiveResponse, error) {
	client := live.NewLiveClient(m.cli.Conn())
	return client.ListVideo(ctx, in, opts...)
}
