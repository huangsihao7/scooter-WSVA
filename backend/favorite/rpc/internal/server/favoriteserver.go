// Code generated by goctl. DO NOT EDIT.
// Source: favorite.proto

package server

import (
	"context"

	"github.com/huangsihao7/scooter-WSVA/favorite/rpc/favorite"
	"github.com/huangsihao7/scooter-WSVA/favorite/rpc/internal/logic"
	"github.com/huangsihao7/scooter-WSVA/favorite/rpc/internal/svc"
)

type FavoriteServer struct {
	svcCtx *svc.ServiceContext
	favorite.UnimplementedFavoriteServer
}

func NewFavoriteServer(svcCtx *svc.ServiceContext) *FavoriteServer {
	return &FavoriteServer{
		svcCtx: svcCtx,
	}
}

func (s *FavoriteServer) FavoriteAction(ctx context.Context, in *favorite.FavoriteActionRequest) (*favorite.FavoriteActionResponse, error) {
	l := logic.NewFavoriteActionLogic(ctx, s.svcCtx)
	return l.FavoriteAction(in)
}

func (s *FavoriteServer) FavoriteList(ctx context.Context, in *favorite.FavoriteListRequest) (*favorite.FavoriteListResponse, error) {
	l := logic.NewFavoriteListLogic(ctx, s.svcCtx)
	return l.FavoriteList(in)
}

func (s *FavoriteServer) GetVideoFavoriteCount(ctx context.Context, in *favorite.QueryId) (*favorite.QueryCount, error) {
	l := logic.NewGetVideoFavoriteCountLogic(ctx, s.svcCtx)
	return l.GetVideoFavoriteCount(in)
}

func (s *FavoriteServer) GetUserFavoriteCount(ctx context.Context, in *favorite.QueryId) (*favorite.QueryCount, error) {
	l := logic.NewGetUserFavoriteCountLogic(ctx, s.svcCtx)
	return l.GetUserFavoriteCount(in)
}

func (s *FavoriteServer) GetUserTotalFavoritedCount(ctx context.Context, in *favorite.QueryId) (*favorite.QueryCount, error) {
	l := logic.NewGetUserTotalFavoritedCountLogic(ctx, s.svcCtx)
	return l.GetUserTotalFavoritedCount(in)
}

func (s *FavoriteServer) StarAction(ctx context.Context, in *favorite.StarActionRequest) (*favorite.StarActionResponse, error) {
	l := logic.NewStarActionLogic(ctx, s.svcCtx)
	return l.StarAction(in)
}

func (s *FavoriteServer) StarList(ctx context.Context, in *favorite.StarListRequest) (*favorite.StarListResponse, error) {
	l := logic.NewStarListLogic(ctx, s.svcCtx)
	return l.StarList(in)
}
