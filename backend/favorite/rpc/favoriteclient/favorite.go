// Code generated by goctl. DO NOT EDIT.
// Source: favorite.proto

package favoriteclient

import (
	"context"

	"github.com/huangsihao7/scooter-WSVA/favorite/rpc/favorite"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FavoriteActionRequest  = favorite.FavoriteActionRequest
	FavoriteActionResponse = favorite.FavoriteActionResponse
	FavoriteListRequest    = favorite.FavoriteListRequest
	FavoriteListResponse   = favorite.FavoriteListResponse
	QueryCount             = favorite.QueryCount
	QueryId                = favorite.QueryId
	StarActionRequest      = favorite.StarActionRequest
	StarActionResponse     = favorite.StarActionResponse
	StarListRequest        = favorite.StarListRequest
	StarListResponse       = favorite.StarListResponse
	User                   = favorite.User
	Video                  = favorite.Video

	Favorite interface {
		FavoriteAction(ctx context.Context, in *FavoriteActionRequest, opts ...grpc.CallOption) (*FavoriteActionResponse, error)
		FavoriteList(ctx context.Context, in *FavoriteListRequest, opts ...grpc.CallOption) (*FavoriteListResponse, error)
		StarAction(ctx context.Context, in *StarActionRequest, opts ...grpc.CallOption) (*StarActionResponse, error)
		StarList(ctx context.Context, in *StarListRequest, opts ...grpc.CallOption) (*StarListResponse, error)
	}

	defaultFavorite struct {
		cli zrpc.Client
	}
)

func NewFavorite(cli zrpc.Client) Favorite {
	return &defaultFavorite{
		cli: cli,
	}
}

func (m *defaultFavorite) FavoriteAction(ctx context.Context, in *FavoriteActionRequest, opts ...grpc.CallOption) (*FavoriteActionResponse, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.FavoriteAction(ctx, in, opts...)
}

func (m *defaultFavorite) FavoriteList(ctx context.Context, in *FavoriteListRequest, opts ...grpc.CallOption) (*FavoriteListResponse, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.FavoriteList(ctx, in, opts...)
}

func (m *defaultFavorite) StarAction(ctx context.Context, in *StarActionRequest, opts ...grpc.CallOption) (*StarActionResponse, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.StarAction(ctx, in, opts...)
}

func (m *defaultFavorite) StarList(ctx context.Context, in *StarListRequest, opts ...grpc.CallOption) (*StarListResponse, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.StarList(ctx, in, opts...)
}
