syntax = "v1"

info (
	title: // TODO: add title
	desc: // TODO: add description
	author: "huangsihao7"
	email: "1057434651@qq.com"
)

type (
	actionReq {
		VideoId    int64 `json:"video_id"`
		ActionType int32 `json:"action_type"`
	}

	actionResp {
		StatusCode int    `json:"status_code"`
		StatusMsg  string `json:"status_msg"`
	}

	listReq {
		UserId int64 `form:"user_id"` // 用户id
	}

	listResp {
		StatusCode int         `json:"status_code"`
		StatusMsg  string      `json:"status_msg"`
		VideoList  []VideoInfo `json:"comment_list"`
	}

	VideoInfo {
		VideoId       int64  `json:"video_id"`
		User          User   `json:"user"`
		PlayUrl       string `json:"play_url"`
		CoverUrl      string `json:"cover_url"`
		FavoriteCount int64  `json:"favorite_count"`
		CommentCount  int64  `json:"comment_count"`
		IsFavorite    bool   `json:"is_favorite"`
		Title         string `json:"title"`
	}

	User {
		Id             uint32 `json:"id"`
		Name           string `json:"name"`
		Avatar         string `json:"avatar"`
		Signature      string `json:"signature"`
		FollowCount    uint32 `json:"follow_count"`
		FollowerCount  uint32 `json:"follower_count"`
		TotalFavorited uint32 `json:"total_favorited"`
		WorkCount      uint32 `json:"work_count"`
		FavoriteCount  uint32 `json:"favorite_count"`
		IsFollow       bool   `json:"is_follow"`
	}
)

type response {
	// TODO: add members here and delete this comment
}
@server(
	jwt: Auth
)
service favorite-api {
	@handler FavoriteAction // TODO: set handler name and delete this comment
	post /favorite/action(actionReq) returns(actionResp)
	
	@handler FavoriteList // TODO: set handler name and delete this comment
	get /favorite/list(listReq) returns(listResp)
}