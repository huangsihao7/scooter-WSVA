// Code generated by goctl. DO NOT EDIT.
// Source: label.proto

package labelclient

import (
	"context"

	"github.com/huangsihao7/scooter-WSVA/label/rpc/label"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	InsertLabelReq  = label.InsertLabelReq
	InsertLabelResp = label.InsertLabelResp

	Label interface {
		InsertLabel(ctx context.Context, in *InsertLabelReq, opts ...grpc.CallOption) (*InsertLabelResp, error)
	}

	defaultLabel struct {
		cli zrpc.Client
	}
)

func NewLabel(cli zrpc.Client) Label {
	return &defaultLabel{
		cli: cli,
	}
}

func (m *defaultLabel) InsertLabel(ctx context.Context, in *InsertLabelReq, opts ...grpc.CallOption) (*InsertLabelResp, error) {
	client := label.NewLabelClient(m.cli.Conn())
	return client.InsertLabel(ctx, in, opts...)
}
